<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStripMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>242, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbEndTurn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="axWindowsMediaPlayer1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAtwAAAAIB
        AAAAAQAAAAAAAAAAAAAAAKIAAAAAAwAACAAAAAAABQAAAAAAAADwPwMAAAAAAAUAAAAAAAAAAAAIAAIA
        AAAAAAMAAQAAAAsA//8DAAAAAAALAP//CAACAAAAAAADADIAAAALAAAACAAKAAAAZgB1AGwAbAAAAAsA
        AAALAAAACwD//wsA//8LAAAACAACAAAAAAAIAAIAAAAAAAgAAgAAAAAACAACAAAAAAALAAAAwAcAAGEC
        AAAL
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAANcDDSD/SJnA/0GMq/8CBAf/AAAAIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqQMLFv8bQV7/FjNK/wAB
        Af8AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABAAAAB/wEECv8BAgT/AAAAhgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAWAAA
        ABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>